name: Continuous Deployment Workflow

# This workflow is triggered whenever commits are pushed to the main branch or manually triggered using the "workflow_dispatch" event.
on:
  workflow_dispatch:
    inputs:
      PR_number:
        description: 'Pull request number'
        required: true
      
defaults:
  run:
    shell: bash

jobs:
  # Deploy the main branch to EC2 server.
  deploy_development:
    name: 'Deploy to EC2'
    runs-on: ubuntu-latest
    
    steps:
      - name: Verify Pull Request Number
        uses: actions/github-script@v6
        id: verify_pr_number
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          result-encoding: string
          script: |
            const response = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: ${{ github.event.inputs.PR_number }}
            });
            
            // Check if the pull request is open
            if (response.data.number !== ${{ github.event.inputs.PR_number }}) {
              throw new Error('Pull request is not open or number is not valid!');
            } else {
              console.log("PR ref: " + response.data.head.ref);
              return response.data.head.ref;
            }


      # Checkout the repository to access its content.
      - uses: actions/checkout@v4.1.0
        name: 'Checkout repository'

      # Deploy files to the server using rsync.
      - uses: Burnett01/rsync-deployments@6.0.0
        name: 'Deploy to server'
        with:
          switches: --recursive --exclude=.git -rlgoDzvc -i --delete
          path: .
          remote_path: ${{ secrets.REMOTE_TARGET }}
          remote_host: ${{ secrets.HOSTNAME }}
          remote_user: ${{ secrets.REMOTE_USER }}
          remote_key: ${{ secrets.SSH_PRIVATE_KEY }}


      - name: Update status
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Deployed to the server
            > PR #${{ github.event.inputs.PR_number }} has been deployed successfully
            
            URL: http://${{ steps.apply_output.outputs.stdout }}`;

            github.rest.issues.createComment({
              issue_number: ${{ github.event.inputs.PR_number }},
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'ðŸ‘‹ Thanks for reporting!'
            })

      # Send a message to a Slack channel.
      - name: Slack Notification 
        uses: rtCamp/action-slack-notify@v2
        if: failure() # Only send a message if the job fails.
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        
      - name: Setup tmate session
        if: ${{ failure() }}
        uses: mxschmitt/action-tmate@v3